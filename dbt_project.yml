
name: 'snowplow_fractribution'
version: '0.3.1'
config-version: 2

require-dbt-version: [">=1.4.0", "<2.0.0"]

profile: 'default'

dispatch:
  - macro_namespace: dbt
    search_order: ['snowplow_utils', 'dbt']

model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]
docs-paths: ["docs"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

vars:
  snowplow_fractribution:
    snowplow__conversion_window_start_date: '' # conversion window start date
    snowplow__conversion_window_end_date: '' # conversion window end date is dynamically set to current_date()-1 in the code
    snowplow__conversion_hosts: ['a.com'] # url_hosts to consider
    snowplow__path_transforms: {'exposure_path': null} # dictionary of path transforms (and their argument, null if none) to perform on the full conversion path (see create_udfs.sql)
    snowplow__path_lookback_steps: 0 # Limit for the number of marketing channels to look at before the conversion (0 = unlimited)
    snowplow__path_lookback_days: 30 # Restrict to marketing channels within this many days of the conversion (recommended: 30 / 14 / 7)

    snowplow__consider_intrasession_channels: false # false = only considers the channel at the start (first page view) of the session, true = consider multiple channels in the conversion session as well as historical channels
    snowplow__channels_to_exclude: [] # Channels to exclude before creating path summaries (and therefore excluded from fractribution analysis), e.g. ['Direct']
    snowplow__use_snowplow_web_user_mapping_table: false # true if using the Snowplow base model for web user mappings (domain_userid => user_id)

    # Overwrite these source table vars in your own dbt_project.yml if not using these defaults:
    snowplow__page_views_source: "{{ source('derived', 'snowplow_web_page_views') }}"
    snowplow__conversions_source: "{{ source('atomic', 'events') }}"
    snowplow__conversions_source_filter: '' # a timestamp field the conversion source field is partitioned on (ideally) for optimized filtering, leave blank to disable
    snowplow__conversions_source_filter_buffer_days: 1 # the number of days to extend the filter
    # snowplow__web_user_mapping_table: derived.snowplow_web_user_mapping # path (schema and table) to the Snowplow web user mapping table

    # Snowflake only
    snowplow__run_python_script_in_snowpark: false
    snowplow__attribution_model_for_snowpark: "shapley"

on-run-start: "{{ create_udfs() }}"


models:
  snowplow_fractribution:
    +schema: "derived"
    +materialized: table
