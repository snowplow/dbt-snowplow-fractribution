
name: 'fractribution'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'fractribution'


# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

vars:
  conversion_window_start_date: '2022-06-03' # conversion window start date
  conversion_window_end_date: '2022-08-01' # conversion window end date
  conversion_hosts: ['poplindata.com'] # url_hosts to consider
  path_lookback_steps: 0 # Limit for the number of marketing channels to look at before the conversion (0 = unlimited)
  path_lookback_days: 30 # Restrict to marketing channels within this many days of the conversion (recommended: 30 / 14 / 7)
  path_transforms: [['Exposure', null]] # array of path transforms (and their arguments) to perform on the full conversion path (see udfs.sql)
  consider_intrasession_channels: false # false = only considers the channel at the start (first page view) of the session, true = consider multiple channels in the conversion session as well as historical channels

  use_snowplow_web_user_mapping_table: false # true if using the Snowplow base model for web user mappings (domain_userid => user_id)

# Set source table vars if not using defaults:
  # atomic_schema: 'atomic_test'
  # events_table: 'fractribution_sample'
  # page_views_schema: 'atomic_derived'
  # page_views_table: 'snowplow_web_page_views_frac'
  
  
  # snowplow_web_user_mapping_table: fractribution_derived.snowplow_web_user_mapping # path (schema and table) in to the Snowplow web user mapping table (BigQuery)


on-run-start: "{{ create_udfs() }}"
models:
  fractribution:
    +schema: "fractribution"
    +materialized: table
